// Copyright 2017 Intel Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// ----------------------------------------------------------------------------

syntax = "proto3";

import "rule.proto";

message TransactionPayload {

    enum PayloadType {
        TYPE_UNSET = 0;
        CREATE_ACCOUNT = 2;
        CREATE_ASSET = 3;
        CREATE_HOLDING = 4;
        CREATE_OFFER = 5;
        ACCEPT_OFFER = 10;
        CLOSE_OFFER = 11;
        MAKE_TRANSFER = 12;
        CREATE_SETTINGS = 13;
        MODIFY_ACCOUNT_ADMIN_STATUS = 14;
        MODIFY_ACCOUNT_ISSUANCE_STATUS = 15;
        ADD_TRUSTED_KEY = 16;
        REMOVE_TRUSTED_KEY = 17;
        MODIFY_HOLDING = 18;
        MUTUAL_PAYOFF = 19;
    }

    PayloadType payload_type = 1;

    CreateAccount create_account = 2;
    CreateAsset create_asset = 3;
    CreateHolding create_holding = 4;
    CreateOffer create_offer = 5;
    AcceptOffer accept_offer = 10;
    CloseOffer close_offer = 11;
    MakeTransfer make_transfer = 12;
    CreateSettings create_settings = 13;
    ModifyAccountAdminStatus modify_account_admin_status = 14;
    ModifyAccountIssuanceStatus modify_account_issuance_status = 15;
    AddTrustedKey add_trusted_key = 16;
    RemoveTrustedKey remove_trusted_key = 17;
    ModifyHolding modify_holding = 18;
    MutualPayoff mutual_payoff = 19;
}

message CreateAccount {
    string label = 1;
    string description = 2;
}

message CreateAsset {
    string name = 1;
    string description = 2;
    repeated Rule rules = 3;
    uint64 expire_date = 4;
}

message CreateHolding {
    string id = 1;
    string label = 2;
    string description = 3;
    string asset = 4;
    sint64 quantity = 5;
    bool accept_for_mutual_payoff = 6;
    bool offer_for_mutual_payoff = 7;
    sint64 coefficient = 8;
    sint64 reserve = 9;
}

message ModifyHolding {
    string id = 1;
    bool accept_for_mutual_payoff = 2;
    bool offer_for_mutual_payoff = 3;
    sint64 coefficient = 4;
    sint64 reserve = 5;
}

message CreateOffer {
    string id = 1;
    string label = 2;
    string description = 3;
    string source = 4;
    sint64 source_quantity = 5;
    string target = 6;
    sint64 target_quantity = 7;
    repeated Rule rules = 8;
}

message AcceptOffer {
    string id = 1;
    string source = 2;
    string target = 3;
    uint64 count = 4;
    string comment = 5;
}

message CloseOffer {
    string id = 1;
}

message MakeTransfer {
    string id = 1;
    string source = 2;
    string target = 3;
    sint64 quantity = 4;
    string comment = 5;
    bool is_encrypted_comment = 6;
    string random_uuid = 7;
}

message CreateSettings {
    string owner = 1;
    uint32 version = 2;
}

message ModifyAccountAdminStatus {
    string account = 1;
    bool status = 2;
}

message ModifyAccountIssuanceStatus {
    string account = 1;
    bool status = 2;
}

message AddTrustedKey {
    string key = 1;
}

message RemoveTrustedKey {
    string key = 1;
}

message MutualPayoff {
    string id = 1;
    string label = 2;
    string description = 3;
    string initiator_withdrawal_holding_id = 4;
    string initiator_receiving_holding_id = 5;
    string owner_withdrawal_holding_id = 6;
    string owner_receiving_holding_id = 7;
    sint64 initiator_withdrawal_quantity = 8;
    sint64 initiator_receiving_quantity = 9;
    repeated Rule rules = 10;
}
